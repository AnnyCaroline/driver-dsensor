///////////////////////////////////////////////////////////////////////////////
// EXTERNAL INTERFACE
///////////////////////////////////////////////////////////////////////////////
code/await DSensor(var int dataPort, var int? energyPort, var int? time) -> (event (bool) change) -> NEVER;

///////////////////////////////////////////////////////////////////////////////
// DECLARATIONS
///////////////////////////////////////////////////////////////////////////////
#define D_SENSOR_DEFAULT_TIME 1

///////////////////////////////////////////////////////////////////////////////
// VARIABLES
///////////////////////////////////////////////////////////////////////////////
//output bool D_SENSOR_CHANGE;

///////////////////////////////////////////////////////////////////////////////
// ABSTRACTIONS
///////////////////////////////////////////////////////////////////////////////
#include "pcint0.ceu"
#include "wclock.ceu"

code/await DSensor(var int dataPort, var int? energyPort, var int? time) -> (event (bool) change) -> NEVER do
    do finalize with
        if (energyPort?) then
            _digitalWrite(energyPort!, low);
        end
    end

    if (energyPort?) then
        //turn on
        {
            pinMode(@energyPort!, OUTPUT);
            digitalWrite(@energyPort!, HIGH);
        }

        // waits for the circuit to stabilize
        if (time?) then
            await (time!)ms;
        else
            await (D_SENSOR_DEFAULT_TIME)ms;
        end
    end

    if (dataPort == _PCINT4 or dataPort == _PCINT5) then
        call PCINT0_Enable(dataPort, on);
        every PCINT0 do
            var bool r = call PCINT0_Get(dataPort);

            if (dataPort == _PCINT4) then
                //emit D_SENSOR_CHANGE(r);
                emit change(r);
            end
            if (dataPort == _PCINT5) then
                emit change(r);
            end
        end
    end
end